##############################
## STEP 1: base
##############################

# FROM nvidia/cuda:10.1-devel-ubuntu18.04

# TODO maybe some magic about jupyterlab in this base image?
# FROM gcr.io/deeplearning-platform-release/base-cu101
#
# Or, I'm from tensorflow, because I probably need tensorflow anyway
FROM gcr.io/deeplearning-platform-release/tf2-gpu.2-2

# Some documents:
# - https://cloud.google.com/ai-platform/notebooks/docs/custom-container
# - https://cloud.google.com/ai-platform/deep-learning-containers/docs/choosing-container#choose_a_container_image_type
#
# Or make a compatible from scratch:
# https://github.com/doitintl/AI-Platform-Notebook-Using-Custom-Container

LABEL maintainer="Hebi Li <hebi@lihebi.com>"
# This is a concatenated Dockerfile, the maintainers of subsequent sections may vary.
# RUN chmod 1777 /tmp && chmod 1777 /var/tmp

# Julia dependencies
# install Julia packages in /opt/julia instead of $HOME
# ENV JULIA_DEPOT_PATH=/opt/julia


ENV JULIA_VERSION=1.5.0

USER root

WORKDIR /tmp

# hadolint ignore=SC2046
RUN mkdir "/opt/julia-${JULIA_VERSION}" && \
    wget -q https://julialang-s3.julialang.org/bin/linux/x64/$(echo "${JULIA_VERSION}" | cut -d. -f 1,2)"/julia-${JULIA_VERSION}-linux-x86_64.tar.gz" && \
    echo "be7af676f8474afce098861275d28a0eb8a4ece3f83a11027e3554dcdecddb91 *julia-${JULIA_VERSION}-linux-x86_64.tar.gz" | sha256sum -c - && \
    tar xzf "julia-${JULIA_VERSION}-linux-x86_64.tar.gz" -C "/opt/julia-${JULIA_VERSION}" --strip-components=1 && \
    rm "julia-${JULIA_VERSION}-linux-x86_64.tar.gz"
RUN ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia

# # Show Julia where conda libraries are \
# RUN mkdir /etc/julia && \
#     echo "push!(Libdl.DL_LOAD_PATH, \"$CONDA_DIR/lib\")" >> /etc/julia/juliarc.jl && \
#     # Create JULIA_DEPOT_PATH \
#     mkdir "${JULIA_DEPOT_PATH}" && \
#     chown "${NB_USER}" "${JULIA_DEPOT_PATH}" && \
#     fix-permissions "${JULIA_DEPOT_PATH}"

RUN julia -e 'import Pkg; Pkg.update()' && \
    (test $TEST_ONLY_BUILD || julia -e 'import Pkg; Pkg.add("HDF5")') && \
    julia -e "using Pkg; pkg\"add IJulia\"; pkg\"precompile\""
    # move kernelspec out of home \
    # mv "${HOME}/.local/share/jupyter/kernels/julia"* "${CONDA_DIR}/share/jupyter/kernels/" && \
    # chmod -R go+rx "${CONDA_DIR}/share/jupyter" && \
    # rm -rf "${HOME}/.local" && \
    # fix-permissions "${JULIA_DEPOT_PATH}" "${CONDA_DIR}/share/jupyter"


# DEBUG set this to home so that, hopefully user session can have julia cache
# persisted
# ENV JULIA_DEPOT_PATH=$HOME/.julia:/opt/julia

# FIXME the / seems to be restored. In other words, only /home/jupyter persists
RUN apt-get install -y htop

# ... there seems to be some permission errors! I'll just run root for now instead
WORKDIR /root
